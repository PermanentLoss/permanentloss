{
  "contractName": "VaultsManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_OpynV2AddressBook",
          "type": "address"
        },
        {
          "internalType": "address[3]",
          "name": "_validCollateral",
          "type": "address[3]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CreatedVault",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OpynV2AddressBook",
      "outputs": [
        {
          "internalType": "contract IAddressBook",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpynV2Controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validCollateral",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum VaultsManager.Collateral",
          "name": "_assetToDeposit",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "createCollateralizedVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_OpynV2AddressBook\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"_validCollateral\",\"type\":\"address[3]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreatedVault\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OpynV2AddressBook\",\"outputs\":[{\"internalType\":\"contract IAddressBook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VaultsManager.Collateral\",\"name\":\"_assetToDeposit\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createCollateralizedVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpynV2Controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validCollateral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getOpynV2Controller()\":{\"details\":\"Opyn v2 uses proxies to deploy upgradable contracts and this is why we can not return OpynV2AddressBook.getController() directly\",\"returns\":{\"_0\":\"Address of the current Controller implementation contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"OpynV2AddressBook()\":{\"notice\":\"Provides addresses for all modules in Opyn v2\"},\"getOpynV2Controller()\":{\"notice\":\"Get the address of the contract that controls the Gamma Protocol (Opyn v2) and the interaction of all sub contracts in the current network\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/VaultsManager.sol\":\"VaultsManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/OpynV2Helpers.sol\":{\"keccak256\":\"0x507464a80b1e97718f56ba8e50b4f6b049e102807b202cec4f7be6909bee6422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06cde58e764e96701fb891d119a6ea47092bb0b5cde3df2dbd16a7acb76c4fa4\",\"dweb:/ipfs/QmcKxv3FBKWwLR8RQJaGHx4yvVJoJvXvWdh5eP4EN3JB7N\"]},\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/VaultsManager.sol\":{\"keccak256\":\"0x5c1da03186edcc30ddcadc259df6a13e8b47c35b9db2079646cf68c7ac0cb053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8d0a3e6a93f3570e6fa3c95156f5105ecbe0614133005804c953e9826b8ecaf\",\"dweb:/ipfs/QmSj72qy3zAedKXuZBVUbkpK5wiAf2WHTuiH6xJxsTMXKV\"]},\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/interfaces/IAddressBook.sol\":{\"keccak256\":\"0xbdb6f9a1d77734f3548256b9ba8b25926196553080348dacfa9c4638a002de28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c984025569d6138a2df18087492902c0977d2e6bfb5df25a0ec42d3a0053e59\",\"dweb:/ipfs/Qmdo6hYXQrDs9kRsrAoeKETxyJ4J3bctncVs9x4X63UjKb\"]},\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/interfaces/IController.sol\":{\"keccak256\":\"0x80c3556f41ca6f7af75eec5acd976a9ee29e6de69e0c72483eb3a1370cffa66f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46ab985c360eb133b19733db6c43a778c4cb9071dcb02827821906ae79b2b7e7\",\"dweb:/ipfs/QmUUmFvQX1XPorrAMj28z1QtzwCDM4scZ3H2edJ691qiPj\"]},\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/interfaces/IOwnedUpgradeabilityProxy.sol\":{\"keccak256\":\"0x8f8c41bfe3caf39ddb10a58664d8d144d175228b0f2d669093c596edcf857714\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35a34209499eca217c0a0a70ea6cc80b57632d8933800a36bb25264346dc72ce\",\"dweb:/ipfs/QmWYtwdeKZ46QLHetdwRAvUEoRYgKQT4qkyTwjTcEtqHzw\"]},\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/libs/Actions.sol\":{\"keccak256\":\"0xd84d6af57ad9377562e2de4f6be7808a92c7c9a72e8be4b6176a8dcfd2583779\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a29ed5c872ff21c96da93b08219bc63cc933f1838d15c9de1986d8da8ef2a376\",\"dweb:/ipfs/Qmf7oH6eH3f1eV1PCZ9nSPuLRSkweR58mhwzv3E25A3HUp\"]},\"/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/libs/MarginVault.sol\":{\"keccak256\":\"0x8cbe0d6d16b0e11b25dcab48e49124266e6e4b7f797f329e013342bdccdca095\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc5ac1f3f719910d26b4d4e28275d36cee08b1ec9e2886b2060f46336d0ffe8\",\"dweb:/ipfs/QmWMD3XPuESDAuYD3NpzhjgEfzsu2Hwkiipk5Fb9ok1xbW\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000c4438038062000c44833981016040819052610031916100e1565b6001600160601b0319606083901b166080526100506000826003610058565b505050610175565b82600381019282156100a0579160200282015b828111156100a057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061006b565b506100ac9291506100b0565b5090565b5b808211156100ac57600081556001016100b1565b80516001600160a01b03811681146100dc57600080fd5b919050565b600080608083850312156100f3578182fd5b6100fc836100c5565b9150602084603f85011261010e578182fd5b604051606081016001600160401b038111828210171561012a57fe5b6040528085830160808701881015610140578485fd5b845b600381101561016657610154826100c5565b83529184019190840190600101610142565b50505080925050509250929050565b60805160601c610aad620001976000398060be52806105d85250610aad6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632a6e760314610051578063454b07f91461007a578063a0fde25e14610082578063b2e38f1614610097575b600080fd5b61006461005f36600461075c565b61009f565b60405161007191906107e4565b60405180910390f35b6100646100bc565b61009561009036600461072e565b6100e0565b005b6100646105d3565b600081600381106100ac57fe5b01546001600160a01b0316905081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006100ea6105d3565b9050806001600160a01b031663eab7775b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561012557600080fd5b505afa158015610139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015d919061070e565b156101835760405162461bcd60e51b815260040161017a906109f0565b60405180910390fd5b604051636553690d60e11b81526000906001600160a01b0383169063caa6d21a906101b29033906004016107e4565b60206040518083038186803b1580156101ca57600080fd5b505afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610774565b600101905060008085600281111561021657fe5b6003811061022057fe5b01546040516370a0823160e01b81526001600160a01b039091169150849082906370a08231906102549033906004016107e4565b60206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610774565b10156102c25760405162461bcd60e51b815260040161017a90610956565b604051636eb1769f60e11b815284906001600160a01b0383169063dd62ed3e906102f290339030906004016107f8565b60206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610774565b10156103605760405162461bcd60e51b815260040161017a9061090c565b6040516323b872dd60e01b81526000906001600160a01b038316906323b872dd9061039390339030908a90600401610812565b602060405180830381600087803b1580156103ad57600080fd5b505af11580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e5919061070e565b9050806104045760405162461bcd60e51b815260040161017a906109a4565b6040805161010081019091526060908060008152602001336001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200185815260200160008152602001600081526020016040518060600160405280602a8152602001610a4e602a91398152508160008151811061048757fe5b602090810291909101015260408051610100810190915280600581523360208201819052604082015260600160008960028111156104c157fe5b600381106104cb57fe5b0160009054906101000a90046001600160a01b03166001600160a01b03168152602001858152602001878152602001600081526020016040518060600160405280602a8152602001610a4e602a91398152508160018151811061052a57fe5b6020908102919091010152604051635b0bf86360e11b81526001600160a01b0386169063b617f0c690610561908490600401610836565b600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b505050507f6e6f0359f5aac25b3f38bda33d180dc1829d2bb29103a4824c177dfbb850bdc8336040516105c291906107e4565b60405180910390a150505050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062f57600080fd5b505afa158015610643573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066791906106e0565b9050806001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da91906106e0565b91505090565b6000602082840312156106f1578081fd5b81516001600160a01b0381168114610707578182fd5b9392505050565b60006020828403121561071f578081fd5b81518015158114610707578182fd5b60008060408385031215610740578081fd5b82356003811061074e578182fd5b946020939093013593505050565b60006020828403121561076d578081fd5b5035919050565b600060208284031215610785578081fd5b5051919050565b6001600160a01b03169052565b60008151808452815b818110156107be576020818501810151868301820152016107a2565b818111156107cf5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156108fe57603f1989840301855281516101008151600a811061087c57fe5b85528189015161088e8a87018261078c565b508782015161089f8987018261078c565b506060808301516108b28288018261078c565b50506080828101519086015260a0808301519086015260c0808301519086015260e0918201519185018190526108ea81860183610799565b96890196945050509086019060010161085a565b509098975050505050505050565b6020808252602a908201527f5661756c74734d616e616765723a204e6565647320746f2063616c6c206170706040820152691c9bdd9948199a5c9cdd60b21b606082015260800190565b6020808252602e908201527f5661756c74734d616e616765723a20496e73756666696369656e7420636f6c6c60408201526d61746572616c2062616c616e636560901b606082015260800190565b6020808252602c908201527f5661756c74734d616e616765723a204661696c6564207472616e73666572696e60408201526b19c818dbdb1b185d195c985b60a21b606082015260800190565b6020808252603b908201527f5661756c74734d616e616765723a20546865204f70796e20563220737973746560408201527f6d2069732063757272656e746c792066756c6c7920706175736564000000000060608201526080019056fe307830303030303030303030303030303030303030303030303030303030303030303030303030303030a2646970667358221220c925c995f00fc237e1b280e058e43a30966fdb0c2d6f12c5a073d752612132cd64736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632a6e760314610051578063454b07f91461007a578063a0fde25e14610082578063b2e38f1614610097575b600080fd5b61006461005f36600461075c565b61009f565b60405161007191906107e4565b60405180910390f35b6100646100bc565b61009561009036600461072e565b6100e0565b005b6100646105d3565b600081600381106100ac57fe5b01546001600160a01b0316905081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006100ea6105d3565b9050806001600160a01b031663eab7775b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561012557600080fd5b505afa158015610139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015d919061070e565b156101835760405162461bcd60e51b815260040161017a906109f0565b60405180910390fd5b604051636553690d60e11b81526000906001600160a01b0383169063caa6d21a906101b29033906004016107e4565b60206040518083038186803b1580156101ca57600080fd5b505afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610774565b600101905060008085600281111561021657fe5b6003811061022057fe5b01546040516370a0823160e01b81526001600160a01b039091169150849082906370a08231906102549033906004016107e4565b60206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610774565b10156102c25760405162461bcd60e51b815260040161017a90610956565b604051636eb1769f60e11b815284906001600160a01b0383169063dd62ed3e906102f290339030906004016107f8565b60206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610774565b10156103605760405162461bcd60e51b815260040161017a9061090c565b6040516323b872dd60e01b81526000906001600160a01b038316906323b872dd9061039390339030908a90600401610812565b602060405180830381600087803b1580156103ad57600080fd5b505af11580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e5919061070e565b9050806104045760405162461bcd60e51b815260040161017a906109a4565b6040805161010081019091526060908060008152602001336001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200185815260200160008152602001600081526020016040518060600160405280602a8152602001610a4e602a91398152508160008151811061048757fe5b602090810291909101015260408051610100810190915280600581523360208201819052604082015260600160008960028111156104c157fe5b600381106104cb57fe5b0160009054906101000a90046001600160a01b03166001600160a01b03168152602001858152602001878152602001600081526020016040518060600160405280602a8152602001610a4e602a91398152508160018151811061052a57fe5b6020908102919091010152604051635b0bf86360e11b81526001600160a01b0386169063b617f0c690610561908490600401610836565b600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b505050507f6e6f0359f5aac25b3f38bda33d180dc1829d2bb29103a4824c177dfbb850bdc8336040516105c291906107e4565b60405180910390a150505050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062f57600080fd5b505afa158015610643573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066791906106e0565b9050806001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da91906106e0565b91505090565b6000602082840312156106f1578081fd5b81516001600160a01b0381168114610707578182fd5b9392505050565b60006020828403121561071f578081fd5b81518015158114610707578182fd5b60008060408385031215610740578081fd5b82356003811061074e578182fd5b946020939093013593505050565b60006020828403121561076d578081fd5b5035919050565b600060208284031215610785578081fd5b5051919050565b6001600160a01b03169052565b60008151808452815b818110156107be576020818501810151868301820152016107a2565b818111156107cf5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156108fe57603f1989840301855281516101008151600a811061087c57fe5b85528189015161088e8a87018261078c565b508782015161089f8987018261078c565b506060808301516108b28288018261078c565b50506080828101519086015260a0808301519086015260c0808301519086015260e0918201519185018190526108ea81860183610799565b96890196945050509086019060010161085a565b509098975050505050505050565b6020808252602a908201527f5661756c74734d616e616765723a204e6565647320746f2063616c6c206170706040820152691c9bdd9948199a5c9cdd60b21b606082015260800190565b6020808252602e908201527f5661756c74734d616e616765723a20496e73756666696369656e7420636f6c6c60408201526d61746572616c2062616c616e636560901b606082015260800190565b6020808252602c908201527f5661756c74734d616e616765723a204661696c6564207472616e73666572696e60408201526b19c818dbdb1b185d195c985b60a21b606082015260800190565b6020808252603b908201527f5661756c74734d616e616765723a20546865204f70796e20563220737973746560408201527f6d2069732063757272656e746c792066756c6c7920706175736564000000000060608201526080019056fe307830303030303030303030303030303030303030303030303030303030303030303030303030303030a2646970667358221220c925c995f00fc237e1b280e058e43a30966fdb0c2d6f12c5a073d752612132cd64736f6c63430007030033",
  "immutableReferences": {
    "55": [
      {
        "length": 32,
        "start": 190
      },
      {
        "length": 32,
        "start": 1496
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1131:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "76:117:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "86:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "101:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "171:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "180:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "183:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "173:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "173:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "173:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "130:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "141:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "156:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "152:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "152:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "165:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "148:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "148:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "127:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "117:2:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "55:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "66:5:11",
                "type": ""
              }
            ],
            "src": "14:179:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "319:810:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "366:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "375:6:11"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "383:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "368:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "368:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "368:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "340:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "336:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "336:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "361:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "332:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "332:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "329:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "401:52:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "443:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "411:31:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:42:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "401:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "462:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "472:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "466:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "527:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "536:6:11"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "544:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "529:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "529:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "529:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "501:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "512:2:11",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "497:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "497:18:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "517:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "493:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "493:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "486:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "483:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "562:23:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "582:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "576:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:9:11"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "566:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "594:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "616:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "612:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:15:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "598:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "702:13:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "704:7:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "704:9:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "704:9:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "645:10:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "665:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "669:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "661:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "661:10:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "673:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "657:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "657:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "642:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "642:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "681:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "693:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "678:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "678:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "639:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "636:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "731:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "735:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "724:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "724:22:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "755:17:11",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "766:6:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "759:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "781:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "796:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "807:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "792:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "792:18:11"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "785:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "855:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "864:6:11"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "872:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "857:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "857:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "857:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "829:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "840:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "825:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:19:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "846:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "822:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "819:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "890:15:11",
                  "value": {
                    "name": "value1",
                    "nodeType": "YulIdentifier",
                    "src": "899:6:11"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "894:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "961:137:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "982:3:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "1019:3:11"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "987:31:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "987:36:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:49:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:49:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1037:19:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "1048:3:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1053:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1044:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1044:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1037:3:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1069:19:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "1080:3:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1085:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1076:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1076:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "1069:3:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "925:1:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "928:4:11",
                        "type": "",
                        "value": "0x03"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "922:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:11:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "934:18:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "936:14:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "945:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "948:1:11",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "941:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "941:9:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "936:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "918:3:11",
                    "statements": []
                  },
                  "src": "914:184:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1107:16:11",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1117:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1107:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$3_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "277:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "288:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "300:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "308:6:11",
                "type": ""
              }
            ],
            "src": "198:931:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$3_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        let _1 := 32\n        if iszero(slt(add(headStart, 63), dataEnd)) { revert(value1, value1) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, _1)\n        if gt(add(headStart, 128), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address_fromMemory(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := memPtr\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6808:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:11"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:11"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:11",
                "type": ""
              }
            ],
            "src": "14:310:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "407:219:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "453:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "462:6:11"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "455:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "455:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "455:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "428:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "437:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "424:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "424:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "449:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "420:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "420:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "417:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "488:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "507:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "501:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "492:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "570:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "579:6:11"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "587:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "572:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "572:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "572:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "539:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "560:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "553:13:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "546:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "546:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "536:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "536:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "529:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "526:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "605:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "615:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "605:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "373:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "384:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "396:6:11",
                "type": ""
              }
            ],
            "src": "329:297:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "732:257:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "778:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "787:6:11"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "795:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "780:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "780:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "780:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "753:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "762:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "749:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "749:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "774:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "745:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "742:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "813:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "839:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "826:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "817:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "882:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "891:6:11"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "899:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "884:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "884:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "884:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "871:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "878:1:11",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "868:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "868:12:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:20:11"
                  },
                  "nodeType": "YulIf",
                  "src": "858:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "917:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "927:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "917:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "941:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "968:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "979:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "964:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "951:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "941:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Collateral_$110t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "690:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "701:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "713:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "721:6:11",
                "type": ""
              }
            ],
            "src": "631:358:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1064:120:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1110:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1119:6:11"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1127:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1112:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1112:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1112:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1085:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1094:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1081:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1081:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1106:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1077:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1077:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1074:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1145:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1168:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1155:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1145:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1030:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1041:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1053:6:11",
                "type": ""
              }
            ],
            "src": "994:190:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1270:113:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1316:26:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1325:6:11"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1333:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1318:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1318:22:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1318:22:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1291:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1300:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1287:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1287:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1283:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1280:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1351:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1367:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1361:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1361:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1236:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1247:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1259:6:11",
                "type": ""
              }
            ],
            "src": "1189:194:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1434:60:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1451:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1460:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1475:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1480:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1471:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1484:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1467:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1467:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1456:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1456:31:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1444:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1444:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1444:44:11"
                }
              ]
            },
            "name": "abi_encode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1418:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1425:3:11",
                "type": ""
              }
            ],
            "src": "1388:106:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1550:426:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1560:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1580:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1574:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1574:12:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1564:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1602:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1607:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1595:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1595:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1595:19:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1623:12:11",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "1632:3:11"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1627:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1696:110:11",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1710:14:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1720:4:11",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "1714:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1752:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1757:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1748:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1748:11:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1761:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1744:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1744:20:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "1780:5:11"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1787:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1776:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1776:13:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1791:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1772:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1772:22:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1766:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1766:29:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1737:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1737:59:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1737:59:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1655:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1658:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1652:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1652:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1666:21:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1668:17:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1677:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1680:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1673:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1673:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1668:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1648:3:11",
                    "statements": []
                  },
                  "src": "1644:162:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1840:64:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1869:3:11"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1874:6:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1865:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1865:16:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1883:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1861:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1861:27:11"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "1890:3:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1854:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1854:40:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1854:40:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1821:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1824:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1818:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1818:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1815:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1913:57:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1928:3:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1941:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1949:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1937:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1937:15:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1958:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1954:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1954:7:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1933:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1933:29:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:39:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1965:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1920:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1920:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1913:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1527:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1534:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1542:3:11",
                "type": ""
              }
            ],
            "src": "1499:477:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2082:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2092:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2104:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2115:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2100:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2092:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2134:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2149:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2165:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2170:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2161:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2161:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2174:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2157:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2157:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2127:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2127:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2127:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2051:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2062:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2073:4:11",
                "type": ""
              }
            ],
            "src": "1981:203:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2298:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2308:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2320:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2331:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2316:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2308:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2350:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2365:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2381:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2386:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2377:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2377:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2390:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2373:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2373:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2361:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2361:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2343:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2343:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2267:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2278:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2289:4:11",
                "type": ""
              }
            ],
            "src": "2189:211:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2542:175:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2552:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2564:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2575:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2560:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2560:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2552:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2587:29:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2605:3:11",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2610:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2601:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2601:11:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2614:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2597:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2597:19:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2591:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2632:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2647:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2655:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2643:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2643:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2625:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2625:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2625:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2679:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2690:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2675:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2675:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2699:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2707:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2695:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2668:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2668:43:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2503:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2514:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2522:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2533:4:11",
                "type": ""
              }
            ],
            "src": "2405:312:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2887:218:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2897:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2909:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2920:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2905:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2905:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2897:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2932:29:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2950:3:11",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2955:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2946:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2946:11:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2959:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2942:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2942:19:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2936:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2977:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2992:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3000:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2988:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2988:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2970:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2970:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3024:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3020:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3020:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3044:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3052:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3040:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3040:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3013:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3076:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3087:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3072:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3072:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3092:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3065:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3065:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3065:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2840:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2851:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2859:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2867:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2878:4:11",
                "type": ""
              }
            ],
            "src": "2722:383:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3315:1596:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3325:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3335:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3329:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3346:32:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3364:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3375:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3360:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3360:18:11"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3350:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3394:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3405:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3387:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3387:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3417:17:11",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "3428:6:11"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3421:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3443:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3463:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3457:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3457:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3447:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "3486:6:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3494:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3479:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3479:22:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3510:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3520:2:11",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3514:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3531:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3542:9:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3553:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3538:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3538:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3531:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3565:54:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3587:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3602:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3610:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "3598:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3598:15:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3583:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3583:31:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3616:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3579:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3579:40:11"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "3569:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3628:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3646:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3654:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3642:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3642:15:11"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3632:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3666:13:11",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "3675:4:11"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3670:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3737:1145:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3758:3:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3771:6:11"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3779:9:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "3767:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3767:22:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3795:2:11",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "3791:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3791:7:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3763:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3763:36:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3751:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3751:49:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3751:49:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3813:23:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3829:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3823:5:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3823:13:11"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "3817:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3849:16:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3859:6:11",
                          "type": "",
                          "value": "0x0100"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "3853:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3878:19:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "3894:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3888:5:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3888:9:11"
                        },
                        "variables": [
                          {
                            "name": "_5",
                            "nodeType": "YulTypedName",
                            "src": "3882:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3932:13:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "invalid",
                                  "nodeType": "YulIdentifier",
                                  "src": "3934:7:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3934:9:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3934:9:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_5",
                                  "nodeType": "YulIdentifier",
                                  "src": "3923:2:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3927:2:11",
                                  "type": "",
                                  "value": "10"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3920:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3920:10:11"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "3913:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3913:18:11"
                        },
                        "nodeType": "YulIf",
                        "src": "3910:2:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "3965:6:11"
                            },
                            {
                              "name": "_5",
                              "nodeType": "YulIdentifier",
                              "src": "3973:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3958:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3958:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3958:18:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3989:38:11",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4019:2:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4023:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4015:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4015:11:11"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4009:5:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4009:18:11"
                        },
                        "variables": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulTypedName",
                            "src": "3993:12:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "memberValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4061:12:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4079:6:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4087:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4075:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4075:15:11"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4040:20:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4040:51:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4040:51:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4104:40:11",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4136:2:11"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4140:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4132:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4132:11:11"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4126:5:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4126:18:11"
                        },
                        "variables": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulTypedName",
                            "src": "4108:14:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "memberValue0_1",
                              "nodeType": "YulIdentifier",
                              "src": "4178:14:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4198:6:11"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4206:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4194:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4194:15:11"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4157:20:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4157:53:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4157:53:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4223:14:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4233:4:11",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_6",
                            "nodeType": "YulTypedName",
                            "src": "4227:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4250:40:11",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4282:2:11"
                                },
                                {
                                  "name": "_6",
                                  "nodeType": "YulIdentifier",
                                  "src": "4286:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4278:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4278:11:11"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4272:5:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4272:18:11"
                        },
                        "variables": [
                          {
                            "name": "memberValue0_2",
                            "nodeType": "YulTypedName",
                            "src": "4254:14:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "memberValue0_2",
                              "nodeType": "YulIdentifier",
                              "src": "4324:14:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4344:6:11"
                                },
                                {
                                  "name": "_6",
                                  "nodeType": "YulIdentifier",
                                  "src": "4352:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4340:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4340:15:11"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4303:20:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4303:53:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4303:53:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4369:14:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4379:4:11",
                          "type": "",
                          "value": "0x80"
                        },
                        "variables": [
                          {
                            "name": "_7",
                            "nodeType": "YulTypedName",
                            "src": "4373:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4407:6:11"
                                },
                                {
                                  "name": "_7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4415:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4403:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4403:15:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4430:2:11"
                                    },
                                    {
                                      "name": "_7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4434:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4426:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4426:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4420:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4420:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4396:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4396:43:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4396:43:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4452:14:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4462:4:11",
                          "type": "",
                          "value": "0xa0"
                        },
                        "variables": [
                          {
                            "name": "_8",
                            "nodeType": "YulTypedName",
                            "src": "4456:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4490:6:11"
                                },
                                {
                                  "name": "_8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4498:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4486:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4486:15:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4513:2:11"
                                    },
                                    {
                                      "name": "_8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4517:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4509:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4509:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4503:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4503:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4479:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4479:43:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4479:43:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4535:14:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4545:4:11",
                          "type": "",
                          "value": "0xc0"
                        },
                        "variables": [
                          {
                            "name": "_9",
                            "nodeType": "YulTypedName",
                            "src": "4539:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4573:6:11"
                                },
                                {
                                  "name": "_9",
                                  "nodeType": "YulIdentifier",
                                  "src": "4581:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4569:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4569:15:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4596:2:11"
                                    },
                                    {
                                      "name": "_9",
                                      "nodeType": "YulIdentifier",
                                      "src": "4600:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4592:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4592:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4586:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4586:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4562:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4562:43:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4562:43:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4618:15:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4629:4:11",
                          "type": "",
                          "value": "0xe0"
                        },
                        "variables": [
                          {
                            "name": "_10",
                            "nodeType": "YulTypedName",
                            "src": "4622:3:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4646:41:11",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4678:2:11"
                                },
                                {
                                  "name": "_10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4682:3:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4674:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4674:12:11"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4668:5:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4668:19:11"
                        },
                        "variables": [
                          {
                            "name": "memberValue0_3",
                            "nodeType": "YulTypedName",
                            "src": "4650:14:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4711:6:11"
                                },
                                {
                                  "name": "_10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4719:3:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4707:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4707:16:11"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "4725:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4700:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4700:28:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4700:28:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4741:61:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "memberValue0_3",
                              "nodeType": "YulIdentifier",
                              "src": "4770:14:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4790:6:11"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "4798:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4786:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4786:15:11"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_bytes",
                            "nodeType": "YulIdentifier",
                            "src": "4751:18:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4751:51:11"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "4741:6:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4815:25:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4829:6:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4837:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4825:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4825:15:11"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4815:6:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4853:19:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4864:3:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4869:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4860:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4860:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4853:3:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3699:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3702:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3696:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3696:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3710:18:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3712:14:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3721:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3724:1:11",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3717:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3717:9:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3712:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3692:3:11",
                    "statements": []
                  },
                  "src": "3688:1194:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4891:14:11",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "4899:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4891:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3284:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3295:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3306:4:11",
                "type": ""
              }
            ],
            "src": "3110:1801:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5037:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5047:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5059:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5070:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5055:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5055:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5047:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5089:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5104:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5120:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5125:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5116:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5116:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5129:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5112:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5112:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5100:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5100:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5082:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5082:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5082:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IAddressBook_$384__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5006:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5017:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5028:4:11",
                "type": ""
              }
            ],
            "src": "4916:223:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5318:232:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5335:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5346:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5328:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5328:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5328:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5369:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5380:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5365:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5365:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5385:2:11",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5358:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5358:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5358:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5408:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5419:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5404:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5404:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5424:34:11",
                        "type": "",
                        "value": "VaultsManager: Needs to call app"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5397:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5479:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5490:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5475:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5475:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5495:12:11",
                        "type": "",
                        "value": "rove first"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5468:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:40:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5468:40:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5517:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5529:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5540:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5525:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5525:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5517:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b366c9792efa7cb3d90c95610ff5b440626db9a5d2189bc953030468070bcde6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5295:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5309:4:11",
                "type": ""
              }
            ],
            "src": "5144:406:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5729:236:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5746:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5757:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5739:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5739:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5739:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5780:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5791:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5776:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5776:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5796:2:11",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5769:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5769:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5769:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5819:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5830:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5815:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5815:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5835:34:11",
                        "type": "",
                        "value": "VaultsManager: Insufficient coll"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5808:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5808:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5808:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5890:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5901:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5886:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5886:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5906:16:11",
                        "type": "",
                        "value": "ateral balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5879:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5879:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5879:44:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5932:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5944:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5955:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5940:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5932:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ba2f0430b85d2ae3b2420567d85bd258f5e49a24aeb304f9e4ee835f49f0231d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5706:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5720:4:11",
                "type": ""
              }
            ],
            "src": "5555:410:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6144:234:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6161:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6172:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6154:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6154:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6195:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6206:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6191:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6191:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6211:2:11",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6184:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6184:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6184:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6234:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6245:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6230:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6230:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6250:34:11",
                        "type": "",
                        "value": "VaultsManager: Failed transferin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6223:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6223:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6223:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6305:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6316:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6301:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6301:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6321:14:11",
                        "type": "",
                        "value": "g collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6294:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6294:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6294:42:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6345:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6357:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6368:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6353:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6353:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6345:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc033bcd73a8f639da476728eec6ea86bfae0af9effbada45b13043d209a0349__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6121:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6135:4:11",
                "type": ""
              }
            ],
            "src": "5970:408:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6557:249:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6574:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6585:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6567:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6567:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6567:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6608:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6619:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6604:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6604:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6624:2:11",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6597:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6597:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6647:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6658:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6643:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6643:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6663:34:11",
                        "type": "",
                        "value": "VaultsManager: The Opyn V2 syste"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6636:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6636:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6636:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6718:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6729:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6714:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6714:18:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6734:29:11",
                        "type": "",
                        "value": "m is currently fully paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6707:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6707:57:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6707:57:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6773:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6785:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6796:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6781:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6781:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6773:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe00934109f4ae4a7450fe38d4eead992fc628996442ea1a9a5107aa001853b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6534:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6548:4:11",
                "type": ""
              }
            ],
            "src": "6383:423:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_Collateral_$110t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(value1, value1) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, mul(length, _1)), _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x0100\n            let _5 := mload(_3)\n            if iszero(lt(_5, 10)) { invalid() }\n            mstore(tail_2, _5)\n            let memberValue0 := mload(add(_3, _1))\n            abi_encode_t_address(memberValue0, add(tail_2, _1))\n            let memberValue0_1 := mload(add(_3, _2))\n            abi_encode_t_address(memberValue0_1, add(tail_2, _2))\n            let _6 := 0x60\n            let memberValue0_2 := mload(add(_3, _6))\n            abi_encode_t_address(memberValue0_2, add(tail_2, _6))\n            let _7 := 0x80\n            mstore(add(tail_2, _7), mload(add(_3, _7)))\n            let _8 := 0xa0\n            mstore(add(tail_2, _8), mload(add(_3, _8)))\n            let _9 := 0xc0\n            mstore(add(tail_2, _9), mload(add(_3, _9)))\n            let _10 := 0xe0\n            let memberValue0_3 := mload(add(_3, _10))\n            mstore(add(tail_2, _10), _4)\n            tail_2 := abi_encode_t_bytes(memberValue0_3, add(tail_2, _4))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_contract$_IAddressBook_$384__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_b366c9792efa7cb3d90c95610ff5b440626db9a5d2189bc953030468070bcde6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"VaultsManager: Needs to call app\")\n        mstore(add(headStart, 96), \"rove first\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ba2f0430b85d2ae3b2420567d85bd258f5e49a24aeb304f9e4ee835f49f0231d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"VaultsManager: Insufficient coll\")\n        mstore(add(headStart, 96), \"ateral balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc033bcd73a8f639da476728eec6ea86bfae0af9effbada45b13043d209a0349__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"VaultsManager: Failed transferin\")\n        mstore(add(headStart, 96), \"g collateral\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fe00934109f4ae4a7450fe38d4eead992fc628996442ea1a9a5107aa001853b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"VaultsManager: The Opyn V2 syste\")\n        mstore(add(headStart, 96), \"m is currently fully paused\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "262:2272:3:-:0;;;429:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;692:52:2;;;;;;;561:34:3::1;:15;579:16:::0;561:34:::1;;:::i;:::-;;429:173:::0;;262:2272;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;262:2272:3;-1:-1:-1;;;;;262:2272:3;;;;;;;;;;;-1:-1:-1;262:2272:3;;;;;;;-1:-1:-1;262:2272:3;;;-1:-1:-1;262:2272:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:11;95:13;;-1:-1:-1;;;;;137:31:11;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:931::-;;;361:3;349:9;340:7;336:23;332:33;329:2;;;383:6;375;368:22;329:2;411:42;443:9;411:42;:::i;:::-;401:52;;472:2;517:7;512:2;501:9;497:18;493:32;483:2;;544:6;536;529:22;483:2;582;576:9;624:2;612:15;;-1:-1:-1;;;;;642:34:11;;678:22;;;639:62;636:2;;;704:9;636:2;731;724:22;766:6;792:18;;;840:3;825:19;;822:32;-1:-1:-1;819:2:11;;;872:6;864;857:22;819:2;899:6;914:184;928:4;925:1;922:11;914:184;;;987:36;1019:3;987:36;:::i;:::-;975:49;;1044:12;;;;1076;;;;948:1;941:9;914:184;;;918:3;;;1117:6;1107:16;;;;319:810;;;;;:::o;:::-;262:2272:3;;;;;;;;;;;",
  "deployedSourceMap": "262:2272:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:47:2;;;:::i;608:1924:3:-;;;;;;:::i;:::-;;:::i;:::-;;1144:265:2;;;:::i;308:33:3:-;;;;;;;;;;;;-1:-1:-1;;;;;308:33:3;;-1:-1:-1;308:33:3;:::o;402:47:2:-;;;:::o;608:1924:3:-;727:22;764:21;:19;:21::i;:::-;727:59;;819:10;-1:-1:-1;;;;;819:28:3;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;818:31;797:137;;;;-1:-1:-1;;;797:137:3;;;;;;;:::i;:::-;;;;;;;;;966:45;;-1:-1:-1;;;966:45:3;;945:18;;-1:-1:-1;;;;;966:33:3;;;;;:45;;1000:10;;966:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1014:1;966:49;945:70;;1026:17;1053:15;1077;1069:24;;;;;;;;1053:41;;;;;;;;;1127:32;;-1:-1:-1;;;1127:32:3;;-1:-1:-1;;;;;1053:41:3;;;;-1:-1:-1;1163:7:3;;1053:41;;1127:20;;:32;;1148:10;;1127:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;1106:136;;;;-1:-1:-1;;;1106:136:3;;;;;;;:::i;:::-;1273:47;;-1:-1:-1;;;1273:47:3;;1324:7;;-1:-1:-1;;;;;1273:20:3;;;;;:47;;1294:10;;1314:4;;1273:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;;1252:147;;;;-1:-1:-1;;;1252:147:3;;;;;;;:::i;:::-;1433:105;;-1:-1:-1;;;1433:105:3;;1410:20;;-1:-1:-1;;;;;1433:23:3;;;;;:105;;1470:10;;1502:4;;1521:7;;1433:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1410:128;;1569:15;1548:106;;;;-1:-1:-1;;;1548:106:3;;;;;;;:::i;:::-;1724:327;;;;;;;;;1665:35;;1724:327;-1:-1:-1;1724:327:3;;;;1818:10;-1:-1:-1;;;;;1724:327:3;;;;;1865:1;-1:-1:-1;;;;;1724:327:3;;;;;1896:1;-1:-1:-1;;;;;1724:327:3;;;;;1921:10;1724:327;;;;1953:1;1724:327;;;;1975:1;1724:327;;;;;;;;;;;;;;;;;;;;;;;;1711:7;1719:1;1711:10;;;;;;;;;;;;;;;;;:340;2075:372;;;;;;;;;;2120:36;2075:372;;2177:10;2075:372;;;;;;;;;;;;-1:-1:-1;2271:15:3;2263:24;;;;;;;;2247:41;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2247:41:3;-1:-1:-1;;;;;2075:372:3;;;;;2311:10;2075:372;;;;2343:7;2075:372;;;;2371:1;2075:372;;;;;;;;;;;;;;;;;;;;;;;;2062:7;2070:1;2062:10;;;;;;;;;;;;;;;;;:385;2458:27;;-1:-1:-1;;;2458:27:3;;-1:-1:-1;;;;;2458:18:3;;;;;:27;;2477:7;;2458:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2501:24;2514:10;2501:24;;;;;;:::i;:::-;;;;;;;;608:1924;;;;;;;:::o;1144:265:2:-;1196:7;1215:42;1307:17;-1:-1:-1;;;;;1307:31:2;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1215:136;;1369:16;-1:-1:-1;;;;;1369:31:2;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:40;;;1144:265;:::o;14:310:11:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:11;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:11:o;329:297::-;;449:2;437:9;428:7;424:23;420:32;417:2;;;470:6;462;455:22;417:2;507:9;501:16;560:5;553:13;546:21;539:5;536:32;526:2;;587:6;579;572:22;631:358;;;774:2;762:9;753:7;749:23;745:32;742:2;;;795:6;787;780:22;742:2;839:9;826:23;878:1;871:5;868:12;858:2;;899:6;891;884:22;858:2;927:5;979:2;964:18;;;;951:32;;-1:-1:-1;;;732:257:11:o;994:190::-;;1106:2;1094:9;1085:7;1081:23;1077:32;1074:2;;;1127:6;1119;1112:22;1074:2;-1:-1:-1;1155:23:11;;1064:120;-1:-1:-1;1064:120:11:o;1189:194::-;;1312:2;1300:9;1291:7;1287:23;1283:32;1280:2;;;1333:6;1325;1318:22;1280:2;-1:-1:-1;1361:16:11;;1270:113;-1:-1:-1;1270:113:11:o;1388:106::-;-1:-1:-1;;;;;1456:31:11;1444:44;;1434:60::o;1499:477::-;;1580:5;1574:12;1607:6;1602:3;1595:19;1632:3;1644:162;1658:6;1655:1;1652:13;1644:162;;;1720:4;1776:13;;;1772:22;;1766:29;1748:11;;;1744:20;;1737:59;1673:12;1644:162;;;1824:6;1821:1;1818:13;1815:2;;;1890:3;1883:4;1874:6;1869:3;1865:16;1861:27;1854:40;1815:2;-1:-1:-1;1958:2:11;1937:15;-1:-1:-1;;1933:29:11;1924:39;;;;1965:4;1920:50;;1550:426;-1:-1:-1;;1550:426:11:o;1981:203::-;-1:-1:-1;;;;;2145:32:11;;;;2127:51;;2115:2;2100:18;;2082:102::o;2405:312::-;-1:-1:-1;;;;;2643:15:11;;;2625:34;;2695:15;;2690:2;2675:18;;2668:43;2575:2;2560:18;;2542:175::o;2722:383::-;-1:-1:-1;;;;;2988:15:11;;;2970:34;;3040:15;;;;3035:2;3020:18;;3013:43;3087:2;3072:18;;3065:34;;;;2920:2;2905:18;;2887:218::o;3110:1801::-;3335:2;3387:21;;;3457:13;;3360:18;;;3479:22;;;3110:1801;;3335:2;3520;;3538:18;;;;3598:15;;;3583:31;;3579:40;;3642:15;;;3110:1801;3688:1194;3702:6;3699:1;3696:13;3688:1194;;;3795:2;3791:7;3779:9;3771:6;3767:22;3763:36;3758:3;3751:49;3829:6;3823:13;3859:6;3894:2;3888:9;3927:2;3923;3920:10;3910:2;;3934:9;3910:2;3958:18;;4015:11;;;4009:18;4040:51;4075:15;;;4009:18;4040:51;:::i;:::-;;4140:2;4136;4132:11;4126:18;4157:53;4206:2;4198:6;4194:15;4178:14;4157:53;:::i;:::-;;4233:4;4286:2;4282;4278:11;4272:18;4303:53;4352:2;4344:6;4340:15;4324:14;4303:53;:::i;:::-;-1:-1:-1;;4379:4:11;4426:11;;;4420:18;4403:15;;;4396:43;4462:4;4509:11;;;4503:18;4486:15;;;4479:43;4545:4;4592:11;;;4586:18;4569:15;;;4562:43;4629:4;4674:12;;;4668:19;4707:16;;;4700:28;;;4751:51;4786:15;;;4668:19;4751:51;:::i;:::-;4860:12;;;;4741:61;-1:-1:-1;;;4825:15:11;;;;3724:1;3717:9;3688:1194;;;-1:-1:-1;4899:6:11;;3315:1596;-1:-1:-1;;;;;;;;3315:1596:11:o;5144:406::-;5346:2;5328:21;;;5385:2;5365:18;;;5358:30;5424:34;5419:2;5404:18;;5397:62;-1:-1:-1;;;5490:2:11;5475:18;;5468:40;5540:3;5525:19;;5318:232::o;5555:410::-;5757:2;5739:21;;;5796:2;5776:18;;;5769:30;5835:34;5830:2;5815:18;;5808:62;-1:-1:-1;;;5901:2:11;5886:18;;5879:44;5955:3;5940:19;;5729:236::o;5970:408::-;6172:2;6154:21;;;6211:2;6191:18;;;6184:30;6250:34;6245:2;6230:18;;6223:62;-1:-1:-1;;;6316:2:11;6301:18;;6294:42;6368:3;6353:19;;6144:234::o;6383:423::-;6585:2;6567:21;;;6624:2;6604:18;;;6597:30;6663:34;6658:2;6643:18;;6636:62;6734:29;6729:2;6714:18;;6707:57;6796:3;6781:19;;6557:249::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\npragma experimental ABIEncoderV2;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./OpynV2Helpers.sol\";\nimport {IController, Actions} from \"./interfaces/IController.sol\";\n\ncontract VaultsManager is OpynV2Helpers {\n    address[3] public validCollateral;\n\n    enum Collateral {USDC, cUSDC, WETH}\n\n    event CreatedVault(address owner);\n\n    constructor(address _OpynV2AddressBook, address[3] memory _validCollateral)\n        OpynV2Helpers(_OpynV2AddressBook)\n    {\n        validCollateral = _validCollateral;\n    }\n\n    function createCollateralizedVault(\n        Collateral _assetToDeposit,\n        uint256 _amount\n    ) public {\n        IController controller = IController(getOpynV2Controller());\n\n        require(\n            !controller.systemFullyPaused(),\n            \"VaultsManager: The Opyn V2 system is currently fully paused\"\n        );\n\n        uint256 newVaultId = controller.getAccountVaultCounter(msg.sender) + 1;\n\n        IERC20 collateral = IERC20(validCollateral[uint256(_assetToDeposit)]);\n\n        require(\n            collateral.balanceOf(msg.sender) >= _amount,\n            \"VaultsManager: Insufficient collateral balance\"\n        );\n        require(\n            collateral.allowance(msg.sender, address(this)) >= _amount,\n            \"VaultsManager: Needs to call approve first\"\n        );\n\n        bool transferSuccess = collateral.transferFrom(\n            msg.sender,\n            address(this),\n            _amount\n        );\n        require(\n            transferSuccess,\n            \"VaultsManager: Failed transfering collateral\"\n        );\n\n        Actions.ActionArgs[] memory actions;\n\n        actions[0] = Actions.ActionArgs({\n            actionType: Actions.ActionType.OpenVault,\n            owner: msg.sender,\n            secondAddress: address(0),\n            asset: address(0),\n            vaultId: newVaultId,\n            amount: 0,\n            index: 0,\n            data: \"0x0000000000000000000000000000000000000000\"\n        });\n\n        actions[1] = Actions.ActionArgs({\n            actionType: Actions.ActionType.DepositCollateral,\n            owner: msg.sender,\n            secondAddress: msg.sender,\n            asset: validCollateral[uint256(_assetToDeposit)],\n            vaultId: newVaultId,\n            amount: _amount,\n            index: 0,\n            data: \"0x0000000000000000000000000000000000000000\"\n        });\n\n        controller.operate(actions);\n\n        emit CreatedVault(msg.sender);\n    }\n}\n",
  "sourcePath": "/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/VaultsManager.sol",
  "ast": {
    "absolutePath": "/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/VaultsManager.sol",
    "exportedSymbols": {
      "Actions": [
        1254
      ],
      "IAddressBook": [
        384
      ],
      "IController": [
        723
      ],
      "IERC20": [
        2025
      ],
      "IOwnedUpgradeabilityProxy": [
        770
      ],
      "OpynV2Helpers": [
        91
      ],
      "VaultsManager": [
        287
      ]
    },
    "id": 288,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 93,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "id": 94,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 2026,
        "src": "92:70:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 95,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "100:6:3",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/OpynV2Helpers.sol",
        "file": "./OpynV2Helpers.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 92,
        "src": "164:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/interfaces/IController.sol",
        "file": "./interfaces/IController.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 724,
        "src": "194:66:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 98,
              "name": "IController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "202:11:3",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 99,
              "name": "Actions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "215:7:3",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 101,
              "name": "OpynV2Helpers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 91,
              "src": "288:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OpynV2Helpers_$91",
                "typeString": "contract OpynV2Helpers"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "288:13:3"
          }
        ],
        "contractDependencies": [
          91
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 287,
        "linearizedBaseContracts": [
          287,
          91
        ],
        "name": "VaultsManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2a6e7603",
            "id": 106,
            "mutability": "mutable",
            "name": "validCollateral",
            "nodeType": "VariableDeclaration",
            "scope": 287,
            "src": "308:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$3_storage",
              "typeString": "address[3]"
            },
            "typeName": {
              "baseType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "308:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 105,
              "length": {
                "hexValue": "33",
                "id": 104,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "316:1:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "ArrayTypeName",
              "src": "308:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                "typeString": "address[3]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "VaultsManager.Collateral",
            "id": 110,
            "members": [
              {
                "id": 107,
                "name": "USDC",
                "nodeType": "EnumValue",
                "src": "365:4:3"
              },
              {
                "id": 108,
                "name": "cUSDC",
                "nodeType": "EnumValue",
                "src": "371:5:3"
              },
              {
                "id": 109,
                "name": "WETH",
                "nodeType": "EnumValue",
                "src": "378:4:3"
              }
            ],
            "name": "Collateral",
            "nodeType": "EnumDefinition",
            "src": "348:35:3"
          },
          {
            "anonymous": false,
            "id": 114,
            "name": "CreatedVault",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "408:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "407:15:3"
            },
            "src": "389:34:3"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "551:51:3",
              "statements": [
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 126,
                      "name": "validCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "561:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_storage",
                        "typeString": "address[3] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_validCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "579:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                        "typeString": "address[3] memory"
                      }
                    },
                    "src": "561:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage",
                      "typeString": "address[3] storage ref"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "561:34:3"
                }
              ]
            },
            "id": 131,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 123,
                    "name": "_OpynV2AddressBook",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116,
                    "src": "527:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 124,
                "modifierName": {
                  "id": 122,
                  "name": "OpynV2Helpers",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "513:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_OpynV2Helpers_$91_$",
                    "typeString": "type(contract OpynV2Helpers)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "513:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_OpynV2AddressBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "441:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_validCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "469:34:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "469:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 119,
                    "length": {
                      "hexValue": "33",
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "477:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "469:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:64:3"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:3"
            },
            "scope": 287,
            "src": "429:173:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "717:1815:3",
              "statements": [
                {
                  "assignments": [
                    139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "727:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IController_$723",
                        "typeString": "contract IController"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "IController",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 723,
                        "src": "727:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$723",
                          "typeString": "contract IController"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 141,
                          "name": "getOpynV2Controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "764:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "764:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 140,
                      "name": "IController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "752:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IController_$723_$",
                        "typeString": "type(contract IController)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IController_$723",
                      "typeString": "contract IController"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "727:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "818:31:3",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 146,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "819:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IController_$723",
                                "typeString": "contract IController"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "systemFullyPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "819:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "819:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a20546865204f70796e2056322073797374656d2069732063757272656e746c792066756c6c7920706175736564",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "863:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe00934109f4ae4a7450fe38d4eead992fc628996442ea1a9a5107aa001853b6",
                          "typeString": "literal_string \"VaultsManager: The Opyn V2 system is currently fully paused\""
                        },
                        "value": "VaultsManager: The Opyn V2 system is currently fully paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe00934109f4ae4a7450fe38d4eead992fc628996442ea1a9a5107aa001853b6",
                          "typeString": "literal_string \"VaultsManager: The Opyn V2 system is currently fully paused\""
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "797:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:137:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "797:137:3"
                },
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "mutability": "mutable",
                      "name": "newVaultId",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "945:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "945:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1000:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1000:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 155,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "966:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IController_$723",
                            "typeString": "contract IController"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAccountVaultCounter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 570,
                        "src": "966:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "966:45:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1014:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "966:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "945:70:3"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "1026:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2025",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2025,
                        "src": "1026:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2025",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 166,
                          "name": "validCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "1053:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_storage",
                            "typeString": "address[3] storage ref"
                          }
                        },
                        "id": 171,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 169,
                              "name": "_assetToDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "1077:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Collateral_$110",
                                "typeString": "enum VaultsManager.Collateral"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Collateral_$110",
                                "typeString": "enum VaultsManager.Collateral"
                              }
                            ],
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1069:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 167,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1069:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1069:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1053:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 165,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "1046:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2025_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2025",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1026:69:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 177,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1148:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1148:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 175,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "1127:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2025",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "1127:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1127:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 180,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1163:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1127:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a20496e73756666696369656e7420636f6c6c61746572616c2062616c616e6365",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1184:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba2f0430b85d2ae3b2420567d85bd258f5e49a24aeb304f9e4ee835f49f0231d",
                          "typeString": "literal_string \"VaultsManager: Insufficient collateral balance\""
                        },
                        "value": "VaultsManager: Insufficient collateral balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba2f0430b85d2ae3b2420567d85bd258f5e49a24aeb304f9e4ee835f49f0231d",
                          "typeString": "literal_string \"VaultsManager: Insufficient collateral balance\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1106:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:136:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:136:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 188,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1294:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1294:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 192,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1314:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultsManager_$287",
                                    "typeString": "contract VaultsManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VaultsManager_$287",
                                    "typeString": "contract VaultsManager"
                                  }
                                ],
                                "id": 191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1306:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 190,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1306:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1306:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 186,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "1273:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2025",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1984,
                            "src": "1273:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 195,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1324:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1273:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a204e6565647320746f2063616c6c20617070726f7665206669727374",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b366c9792efa7cb3d90c95610ff5b440626db9a5d2189bc953030468070bcde6",
                          "typeString": "literal_string \"VaultsManager: Needs to call approve first\""
                        },
                        "value": "VaultsManager: Needs to call approve first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b366c9792efa7cb3d90c95610ff5b440626db9a5d2189bc953030468070bcde6",
                          "typeString": "literal_string \"VaultsManager: Needs to call approve first\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1252:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:147:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:147:3"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "transferSuccess",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "1410:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1410:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1470:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1470:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1502:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultsManager_$287",
                              "typeString": "contract VaultsManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultsManager_$287",
                              "typeString": "contract VaultsManager"
                            }
                          ],
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1494:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1494:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1494:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 210,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1521:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "1433:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2025",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2006,
                      "src": "1433:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:105:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1410:128:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 214,
                        "name": "transferSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "1569:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a204661696c6564207472616e73666572696e6720636f6c6c61746572616c",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1598:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc033bcd73a8f639da476728eec6ea86bfae0af9effbada45b13043d209a0349",
                          "typeString": "literal_string \"VaultsManager: Failed transfering collateral\""
                        },
                        "value": "VaultsManager: Failed transfering collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc033bcd73a8f639da476728eec6ea86bfae0af9effbada45b13043d209a0349",
                          "typeString": "literal_string \"VaultsManager: Failed transfering collateral\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1548:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:106:3"
                },
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "actions",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "1665:35:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Actions.ActionArgs[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 220,
                          "name": "Actions.ActionArgs",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 803,
                          "src": "1665:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ActionArgs_$803_storage_ptr",
                            "typeString": "struct Actions.ActionArgs"
                          }
                        },
                        "id": 221,
                        "nodeType": "ArrayTypeName",
                        "src": "1665:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_storage_$dyn_storage_ptr",
                          "typeString": "struct Actions.ActionArgs[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1665:35:3"
                },
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 224,
                        "name": "actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "1711:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1711:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 229,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "1769:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                                "typeString": "type(library Actions)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ActionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "1769:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ActionType_$786_$",
                              "typeString": "type(enum Actions.ActionType)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OpenVault",
                          "nodeType": "MemberAccess",
                          "src": "1769:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          }
                        },
                        {
                          "expression": {
                            "id": 232,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1818:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1865:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1857:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1857:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1857:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1896:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1888:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 238,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1888:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 242,
                          "name": "newVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "1921:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1953:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1975:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1996:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          }
                        ],
                        "expression": {
                          "id": 227,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "1724:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                            "typeString": "type(library Actions)"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ActionArgs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 803,
                        "src": "1724:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ActionArgs_$803_storage_ptr_$",
                          "typeString": "type(struct Actions.ActionArgs storage pointer)"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "actionType",
                        "owner",
                        "secondAddress",
                        "asset",
                        "vaultId",
                        "amount",
                        "index",
                        "data"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1724:327:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "src": "1711:340:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                      "typeString": "struct Actions.ActionArgs memory"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:340:3"
                },
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 249,
                        "name": "actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2062:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      },
                      "id": 251,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2062:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 254,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "2120:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                                "typeString": "type(library Actions)"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ActionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "2120:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ActionType_$786_$",
                              "typeString": "type(enum Actions.ActionType)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DepositCollateral",
                          "nodeType": "MemberAccess",
                          "src": "2120:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          }
                        },
                        {
                          "expression": {
                            "id": 257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2177:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2177:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2216:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2216:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 261,
                            "name": "validCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "2247:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_storage",
                              "typeString": "address[3] storage ref"
                            }
                          },
                          "id": 266,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 264,
                                "name": "_assetToDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "2271:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Collateral_$110",
                                  "typeString": "enum VaultsManager.Collateral"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Collateral_$110",
                                  "typeString": "enum VaultsManager.Collateral"
                                }
                              ],
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2263:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 262,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2263:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2263:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2247:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 267,
                          "name": "newVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "2311:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 268,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2343:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2371:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2392:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          }
                        ],
                        "expression": {
                          "id": 252,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "2075:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                            "typeString": "type(library Actions)"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ActionArgs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 803,
                        "src": "2075:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ActionArgs_$803_storage_ptr_$",
                          "typeString": "type(struct Actions.ActionArgs storage pointer)"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "actionType",
                        "owner",
                        "secondAddress",
                        "asset",
                        "vaultId",
                        "amount",
                        "index",
                        "data"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2075:372:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "src": "2062:385:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                      "typeString": "struct Actions.ActionArgs memory"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:385:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 277,
                        "name": "actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2477:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 274,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2458:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$723",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 644,
                      "src": "2458:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Actions.ActionArgs memory[] memory) payable external"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:27:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2514:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2514:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 280,
                      "name": "CreatedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "2501:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "EmitStatement",
                  "src": "2496:29:3"
                }
              ]
            },
            "functionSelector": "a0fde25e",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollateralizedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_assetToDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "652:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Collateral_$110",
                    "typeString": "enum VaultsManager.Collateral"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "Collateral",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 110,
                    "src": "652:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Collateral_$110",
                      "typeString": "enum VaultsManager.Collateral"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "688:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:67:3"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:3"
            },
            "scope": 287,
            "src": "608:1924:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 288,
        "src": "262:2272:3"
      }
    ],
    "src": "32:2503:3"
  },
  "legacyAST": {
    "absolutePath": "/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/VaultsManager.sol",
    "exportedSymbols": {
      "Actions": [
        1254
      ],
      "IAddressBook": [
        384
      ],
      "IController": [
        723
      ],
      "IERC20": [
        2025
      ],
      "IOwnedUpgradeabilityProxy": [
        770
      ],
      "OpynV2Helpers": [
        91
      ],
      "VaultsManager": [
        287
      ]
    },
    "id": 288,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 93,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "id": 94,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 2026,
        "src": "92:70:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 95,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "100:6:3",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/OpynV2Helpers.sol",
        "file": "./OpynV2Helpers.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 92,
        "src": "164:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/andre/src/repos/github/PermanentLoss/permanentloss/contracts/contracts/interfaces/IController.sol",
        "file": "./interfaces/IController.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 724,
        "src": "194:66:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 98,
              "name": "IController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "202:11:3",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 99,
              "name": "Actions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "215:7:3",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 101,
              "name": "OpynV2Helpers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 91,
              "src": "288:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OpynV2Helpers_$91",
                "typeString": "contract OpynV2Helpers"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "288:13:3"
          }
        ],
        "contractDependencies": [
          91
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 287,
        "linearizedBaseContracts": [
          287,
          91
        ],
        "name": "VaultsManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2a6e7603",
            "id": 106,
            "mutability": "mutable",
            "name": "validCollateral",
            "nodeType": "VariableDeclaration",
            "scope": 287,
            "src": "308:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$3_storage",
              "typeString": "address[3]"
            },
            "typeName": {
              "baseType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "308:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 105,
              "length": {
                "hexValue": "33",
                "id": 104,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "316:1:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "ArrayTypeName",
              "src": "308:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                "typeString": "address[3]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "VaultsManager.Collateral",
            "id": 110,
            "members": [
              {
                "id": 107,
                "name": "USDC",
                "nodeType": "EnumValue",
                "src": "365:4:3"
              },
              {
                "id": 108,
                "name": "cUSDC",
                "nodeType": "EnumValue",
                "src": "371:5:3"
              },
              {
                "id": 109,
                "name": "WETH",
                "nodeType": "EnumValue",
                "src": "378:4:3"
              }
            ],
            "name": "Collateral",
            "nodeType": "EnumDefinition",
            "src": "348:35:3"
          },
          {
            "anonymous": false,
            "id": 114,
            "name": "CreatedVault",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "408:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "407:15:3"
            },
            "src": "389:34:3"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "551:51:3",
              "statements": [
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 126,
                      "name": "validCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "561:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_storage",
                        "typeString": "address[3] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_validCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "579:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                        "typeString": "address[3] memory"
                      }
                    },
                    "src": "561:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage",
                      "typeString": "address[3] storage ref"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "561:34:3"
                }
              ]
            },
            "id": 131,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 123,
                    "name": "_OpynV2AddressBook",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116,
                    "src": "527:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 124,
                "modifierName": {
                  "id": 122,
                  "name": "OpynV2Helpers",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "513:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_OpynV2Helpers_$91_$",
                    "typeString": "type(contract OpynV2Helpers)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "513:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_OpynV2AddressBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "441:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_validCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "469:34:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "469:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 119,
                    "length": {
                      "hexValue": "33",
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "477:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "469:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:64:3"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:3"
            },
            "scope": 287,
            "src": "429:173:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "717:1815:3",
              "statements": [
                {
                  "assignments": [
                    139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "727:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IController_$723",
                        "typeString": "contract IController"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "IController",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 723,
                        "src": "727:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$723",
                          "typeString": "contract IController"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 141,
                          "name": "getOpynV2Controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "764:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "764:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 140,
                      "name": "IController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "752:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IController_$723_$",
                        "typeString": "type(contract IController)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IController_$723",
                      "typeString": "contract IController"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "727:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "818:31:3",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 146,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "819:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IController_$723",
                                "typeString": "contract IController"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "systemFullyPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "819:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "819:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a20546865204f70796e2056322073797374656d2069732063757272656e746c792066756c6c7920706175736564",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "863:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe00934109f4ae4a7450fe38d4eead992fc628996442ea1a9a5107aa001853b6",
                          "typeString": "literal_string \"VaultsManager: The Opyn V2 system is currently fully paused\""
                        },
                        "value": "VaultsManager: The Opyn V2 system is currently fully paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe00934109f4ae4a7450fe38d4eead992fc628996442ea1a9a5107aa001853b6",
                          "typeString": "literal_string \"VaultsManager: The Opyn V2 system is currently fully paused\""
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "797:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:137:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "797:137:3"
                },
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "mutability": "mutable",
                      "name": "newVaultId",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "945:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "945:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1000:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1000:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 155,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "966:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IController_$723",
                            "typeString": "contract IController"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAccountVaultCounter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 570,
                        "src": "966:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "966:45:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1014:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "966:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "945:70:3"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "1026:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2025",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2025,
                        "src": "1026:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2025",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 166,
                          "name": "validCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "1053:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_storage",
                            "typeString": "address[3] storage ref"
                          }
                        },
                        "id": 171,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 169,
                              "name": "_assetToDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "1077:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Collateral_$110",
                                "typeString": "enum VaultsManager.Collateral"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Collateral_$110",
                                "typeString": "enum VaultsManager.Collateral"
                              }
                            ],
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1069:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 167,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1069:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1069:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1053:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 165,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "1046:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2025_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2025",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1026:69:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 177,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1148:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1148:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 175,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "1127:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2025",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "1127:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1127:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 180,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1163:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1127:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a20496e73756666696369656e7420636f6c6c61746572616c2062616c616e6365",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1184:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba2f0430b85d2ae3b2420567d85bd258f5e49a24aeb304f9e4ee835f49f0231d",
                          "typeString": "literal_string \"VaultsManager: Insufficient collateral balance\""
                        },
                        "value": "VaultsManager: Insufficient collateral balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba2f0430b85d2ae3b2420567d85bd258f5e49a24aeb304f9e4ee835f49f0231d",
                          "typeString": "literal_string \"VaultsManager: Insufficient collateral balance\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1106:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:136:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:136:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 188,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1294:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1294:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 192,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1314:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultsManager_$287",
                                    "typeString": "contract VaultsManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VaultsManager_$287",
                                    "typeString": "contract VaultsManager"
                                  }
                                ],
                                "id": 191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1306:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 190,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1306:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1306:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 186,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "1273:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2025",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1984,
                            "src": "1273:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 195,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1324:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1273:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a204e6565647320746f2063616c6c20617070726f7665206669727374",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b366c9792efa7cb3d90c95610ff5b440626db9a5d2189bc953030468070bcde6",
                          "typeString": "literal_string \"VaultsManager: Needs to call approve first\""
                        },
                        "value": "VaultsManager: Needs to call approve first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b366c9792efa7cb3d90c95610ff5b440626db9a5d2189bc953030468070bcde6",
                          "typeString": "literal_string \"VaultsManager: Needs to call approve first\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1252:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:147:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:147:3"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "transferSuccess",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "1410:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1410:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1470:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1470:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1502:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultsManager_$287",
                              "typeString": "contract VaultsManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultsManager_$287",
                              "typeString": "contract VaultsManager"
                            }
                          ],
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1494:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1494:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1494:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 210,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1521:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "1433:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2025",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2006,
                      "src": "1433:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:105:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1410:128:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 214,
                        "name": "transferSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "1569:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74734d616e616765723a204661696c6564207472616e73666572696e6720636f6c6c61746572616c",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1598:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc033bcd73a8f639da476728eec6ea86bfae0af9effbada45b13043d209a0349",
                          "typeString": "literal_string \"VaultsManager: Failed transfering collateral\""
                        },
                        "value": "VaultsManager: Failed transfering collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc033bcd73a8f639da476728eec6ea86bfae0af9effbada45b13043d209a0349",
                          "typeString": "literal_string \"VaultsManager: Failed transfering collateral\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1548:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:106:3"
                },
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "actions",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "1665:35:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Actions.ActionArgs[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 220,
                          "name": "Actions.ActionArgs",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 803,
                          "src": "1665:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ActionArgs_$803_storage_ptr",
                            "typeString": "struct Actions.ActionArgs"
                          }
                        },
                        "id": 221,
                        "nodeType": "ArrayTypeName",
                        "src": "1665:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_storage_$dyn_storage_ptr",
                          "typeString": "struct Actions.ActionArgs[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1665:35:3"
                },
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 224,
                        "name": "actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "1711:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1711:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 229,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "1769:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                                "typeString": "type(library Actions)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ActionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "1769:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ActionType_$786_$",
                              "typeString": "type(enum Actions.ActionType)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OpenVault",
                          "nodeType": "MemberAccess",
                          "src": "1769:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          }
                        },
                        {
                          "expression": {
                            "id": 232,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1818:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1865:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1857:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1857:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1857:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1896:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1888:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 238,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1888:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 242,
                          "name": "newVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "1921:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1953:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1975:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1996:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          }
                        ],
                        "expression": {
                          "id": 227,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "1724:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                            "typeString": "type(library Actions)"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ActionArgs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 803,
                        "src": "1724:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ActionArgs_$803_storage_ptr_$",
                          "typeString": "type(struct Actions.ActionArgs storage pointer)"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "actionType",
                        "owner",
                        "secondAddress",
                        "asset",
                        "vaultId",
                        "amount",
                        "index",
                        "data"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1724:327:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "src": "1711:340:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                      "typeString": "struct Actions.ActionArgs memory"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:340:3"
                },
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 249,
                        "name": "actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2062:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      },
                      "id": 251,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2062:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 254,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "2120:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                                "typeString": "type(library Actions)"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ActionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "2120:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ActionType_$786_$",
                              "typeString": "type(enum Actions.ActionType)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DepositCollateral",
                          "nodeType": "MemberAccess",
                          "src": "2120:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          }
                        },
                        {
                          "expression": {
                            "id": 257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2177:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2177:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2216:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2216:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 261,
                            "name": "validCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "2247:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_storage",
                              "typeString": "address[3] storage ref"
                            }
                          },
                          "id": 266,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 264,
                                "name": "_assetToDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "2271:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Collateral_$110",
                                  "typeString": "enum VaultsManager.Collateral"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Collateral_$110",
                                  "typeString": "enum VaultsManager.Collateral"
                                }
                              ],
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2263:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 262,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2263:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2263:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2247:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 267,
                          "name": "newVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "2311:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 268,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2343:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2371:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2392:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_ActionType_$786",
                            "typeString": "enum Actions.ActionType"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a",
                            "typeString": "literal_string \"0x0000000000000000000000000000000000000000\""
                          }
                        ],
                        "expression": {
                          "id": 252,
                          "name": "Actions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "2075:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Actions_$1254_$",
                            "typeString": "type(library Actions)"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ActionArgs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 803,
                        "src": "2075:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ActionArgs_$803_storage_ptr_$",
                          "typeString": "type(struct Actions.ActionArgs storage pointer)"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "actionType",
                        "owner",
                        "secondAddress",
                        "asset",
                        "vaultId",
                        "amount",
                        "index",
                        "data"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2075:372:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                        "typeString": "struct Actions.ActionArgs memory"
                      }
                    },
                    "src": "2062:385:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ActionArgs_$803_memory_ptr",
                      "typeString": "struct Actions.ActionArgs memory"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:385:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 277,
                        "name": "actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2477:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Actions.ActionArgs memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 274,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2458:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$723",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 644,
                      "src": "2458:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_ActionArgs_$803_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Actions.ActionArgs memory[] memory) payable external"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:27:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2514:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2514:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 280,
                      "name": "CreatedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "2501:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "EmitStatement",
                  "src": "2496:29:3"
                }
              ]
            },
            "functionSelector": "a0fde25e",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollateralizedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_assetToDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "652:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Collateral_$110",
                    "typeString": "enum VaultsManager.Collateral"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "Collateral",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 110,
                    "src": "652:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Collateral_$110",
                      "typeString": "enum VaultsManager.Collateral"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "688:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:67:3"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:3"
            },
            "scope": 287,
            "src": "608:1924:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 288,
        "src": "262:2272:3"
      }
    ],
    "src": "32:2503:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x565CD1Bb706Ad4e504727C8ca1DB86A56D57d499",
      "transactionHash": "0xe7054d99ba68dd2cf80796d7e73493f54e15b272691618690cf80b9b1c097b07"
    }
  },
  "schemaVersion": "3.3.0",
  "updatedAt": "2020-10-16T02:57:01.551Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getOpynV2Controller()": {
        "details": "Opyn v2 uses proxies to deploy upgradable contracts and this is why we can not return OpynV2AddressBook.getController() directly",
        "returns": {
          "_0": "Address of the current Controller implementation contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "OpynV2AddressBook()": {
        "notice": "Provides addresses for all modules in Opyn v2"
      },
      "getOpynV2Controller()": {
        "notice": "Get the address of the contract that controls the Gamma Protocol (Opyn v2) and the interaction of all sub contracts in the current network"
      }
    },
    "version": 1
  }
}